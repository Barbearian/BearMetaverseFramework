//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.Graph
{ 

public sealed partial class Edge :  Bright.Config.BeanBase 
{
    public Edge(JSONNode _json) 
    {
        { if(!_json["LinkType"].IsNumber) { throw new SerializationException(); }  LinkType = _json["LinkType"]; }
        { if(!_json["Target"].IsNumber) { throw new SerializationException(); }  Target = _json["Target"]; }
        PostInit();
    }

    public Edge(int LinkType, int Target ) 
    {
        this.LinkType = LinkType;
        this.Target = Target;
        PostInit();
    }

    public static Edge DeserializeEdge(JSONNode _json)
    {
        return new Graph.Edge(_json);
    }

    /// <summary>
    /// The type of link
    /// </summary>
    public int LinkType { get; private set; }
    /// <summary>
    /// The target of the edge
    /// </summary>
    public int Target { get; private set; }

    public const int __ID__ = -66791779;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "LinkType:" + LinkType + ","
        + "Target:" + Target + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
